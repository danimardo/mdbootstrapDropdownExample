{"version":3,"sources":["../../../../../src/app/typescripts/pro/accordion/components/sb-item.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,YAAA,EAAc,KAAA,EAAO,MAAA,EAAQ,UAAA,EAA0B,MAAM,eAAA,CAAgB;AAChG,OAAO,EAAA,mBAAE,EAAmB,MAAM,gBAAA,CAAiB;AACnD,OAAO,EAAA,mBAAE,EAAmB,MAAM,cAAA,CAAe;AAGjD;IAQE,yBAAa,UAA+B;QAJpC,cAAS,GAAG,IAAI,CAAC;QAKvB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,yCAAe,GAAf;QACE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IACD,gCAAM,GAAN,UAAO,SAAkB;QACvB,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAC9B,CAAC;IAED,qCAAW,GAAX,UAAY,SAAkB;QAC5B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAC9B,CAAC;IAiBH,sBAAC;AAAD,CAxCA,AAwCC;;AAfM,0BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,cAAc;aAC5B,EAAG,EAAE;CACL,CAAC;AAEK,8BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,mBAAmB,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,cAAM,OAAA,mBAAmB,EAAnB,CAAmB,CAAC,EAAG,EAAE,EAAG,EAAC;CAC7G,EAF6F,CAE7F,CAAC;AACK,8BAAc,GAA2C;IAChE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC/B,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,mBAAmB,EAAG,EAAE,EAAE;CAC/D,CAAC","file":"sb-item.js","sourceRoot":"","sourcesContent":["import {Component, ContentChild, Input, Inject, forwardRef, AfterViewInit} from '@angular/core';\r\nimport {SBItemBodyComponent} from './sb-item.body';\r\nimport {SqueezeBoxComponent} from './squeezebox';\r\n\r\n\r\nexport class SBItemComponent implements AfterViewInit {\r\n\r\n  private squeezebox: SqueezeBoxComponent;\r\n\r\n   public collapsed = true;\r\n\r\n   body: SBItemBodyComponent;\r\n\r\n  constructor( squeezebox: SqueezeBoxComponent) {\r\n    this.squeezebox = squeezebox;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.body.toggle(this.collapsed);\r\n  }\r\n  toggle(collapsed: boolean) {\r\n    this.squeezebox.didItemToggled(this);\r\n    this.applyToggle(collapsed);\r\n  }\r\n\r\n  applyToggle(collapsed: boolean) {\r\n    this.collapsed = collapsed;\r\n    this.body.toggle(collapsed);\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  exportAs: 'sbItem',\r\n  selector: 'mdb-item',\r\n  templateUrl: 'sb-item.html'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SqueezeBoxComponent, decorators: [{ type: Inject, args: [forwardRef(() => SqueezeBoxComponent), ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'collapsed': [{ type: Input },],\n'body': [{ type: ContentChild, args: [SBItemBodyComponent, ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}