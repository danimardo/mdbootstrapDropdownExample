{"version":3,"sources":["../../../../../src/app/typescripts/pro/accordion/components/squeezebox.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAO,eAAA,EAA4B,UAAA,EAAW,MAAM,eAAA,CAAgB;AACvF,OAAO,EAAA,eAAE,EAAe,MAAM,WAAA,CAAY;AAG1C;IAME;QAJC,aAAQ,GAAG,IAAI,CAAC;IAIF,CAAC;IAEhB,4CAAc,GAAd,UAAe,IAAqB;QAElC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,UAAS,CAAC;gBACrC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;oBACf,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAgBH,0BAAC;AAAD,CAjCA,AAiCC;;AAdM,8BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,YAAY;gBACtB,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,iBAAiB;aAC/B,EAAG,EAAE;CACL,CAAC;AAEK,kCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,kCAAc,GAA2C;IAChE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC9B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,cAAM,OAAA,eAAe,EAAf,CAAe,CAAC,EAAG,EAAE,EAAE;CACjF,CAAC","file":"squeezebox.js","sourceRoot":"","sourcesContent":["import {Component, Input, ContentChildren, QueryList, forwardRef} from '@angular/core';\r\nimport {SBItemComponent} from './sb-item';\r\n\r\n\r\nexport class SqueezeBoxComponent {\r\n\r\n   multiple = true;\r\n\r\n   items: QueryList<SBItemComponent>;\r\n\r\n  constructor() {}\r\n\r\n  didItemToggled(item: SBItemComponent) {\r\n    // on not multiple, it will collpase the rest of items\r\n    if (!this.multiple) {\r\n      this.items.toArray().forEach(function(i) {\r\n        if (i !== item) {\r\n          i.applyToggle(true);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  exportAs: 'squeezebox',\r\n  selector: 'mdb-squeezebox',\r\n  templateUrl: 'squeezebox.html'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'multiple': [{ type: Input },],\n'items': [{ type: ContentChildren, args: [forwardRef(() => SBItemComponent), ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}