{"version":3,"sources":["../../../../src/app/typescripts/pro/inputs/char-counter.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAU,SAAA,EAAW,UAAA,EAAY,QAAA,EAAU,KAAA,EAAO,YAAA,EAAa,MAAO,eAAA,CAAgB;AAK7F;IAKE,8BAAoB,MAAkB,EAAU,SAAmB;QAA/C,WAAM,GAAN,MAAM,CAAY;QAAU,cAAS,GAAT,SAAS,CAAU;QAH3D,WAAM,GAAG,EAAE,CAAC;IAGkD,CAAC;IAEvE,uCAAQ,GAAR;QAEE,IAAI,CAAC,aAAa,GAAI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;QACjG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;QAClE,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;QAClD,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;IACxE,CAAC;IAGA,sCAAO,GAAP;QACE,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;QAE1F,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QAC7E,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QAC7E,CAAC;IACJ,CAAC;IAEA,mCAAI,GAAJ;QACC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;IACxE,CAAC;IAEA,mCAAI,GAAJ;QACC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IACzE,CAAC;IAkBH,2BAAC;AAAD,CAlDA,AAkDC;;AAhBM,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,kBAAkB;aAC7B,EAAG,EAAE;CACL,CAAC;AAEK,mCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,QAAQ,GAAG;CACjB,EAH6F,CAG7F,CAAC;AACK,mCAAc,GAA2C;IAChE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAG,EAAE,EAAE;IACnE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAG,EAAE,EAAE;IAC/D,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAG,EAAE,EAAE;CAC/D,CAAC","file":"char-counter.directive.js","sourceRoot":"","sourcesContent":["import { OnInit, Directive, ElementRef, Renderer, Input, HostListener } from '@angular/core';\r\n\r\n\r\n\r\n\r\nexport class CharCounterDirective implements OnInit {\r\n\r\n   public length = 20;\r\n  public textContainer: any;\r\n\r\n  constructor(private _elRef: ElementRef, private _renderer: Renderer) {}\r\n\r\n  ngOnInit() {\r\n    // Inititalise a new <span> element for the count display and render it below the host component.\r\n    this.textContainer =  this._renderer.createElement(this._elRef.nativeElement.parentElement, 'p');\r\n    this._renderer.setElementClass(this.textContainer, 'chars', true);\r\n    this.textContainer.innerHTML = '0/' + this.length;\r\n    this._renderer.setElementStyle(this.textContainer, 'display', 'none');\r\n  }\r\n\r\n\r\n   onKeyUp() {\r\n     this.textContainer.innerHTML = this._elRef.nativeElement.value.length + '/' + this.length;\r\n\r\n     if (this._elRef.nativeElement.value.length > this.length) {\r\n       this._renderer.setElementClass(this._elRef.nativeElement, 'invalid', true);\r\n     } else {\r\n      this._renderer.setElementClass(this._elRef.nativeElement, 'invalid', false);\r\n     }\r\n  }\r\n\r\n   hide() {\r\n    this._renderer.setElementStyle(this.textContainer, 'display', 'none');\r\n  }\r\n\r\n   show() {\r\n    this._renderer.setElementStyle(this.textContainer, 'display', 'block');\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[mdbCharCounter]'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'length': [{ type: Input },],\n'onKeyUp': [{ type: HostListener, args: ['keyup', ['$event'], ] },],\n'hide': [{ type: HostListener, args: ['blur', ['$event'], ] },],\n'show': [{ type: HostListener, args: ['focus', ['$event'], ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}