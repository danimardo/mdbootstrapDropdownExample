{"version":3,"sources":["../../../../../src/app/typescripts/pro/autocomplete/components/completer-list-item.component.ts"],"names":[],"mappings":"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","file":"completer-list-item.component.js","sourceRoot":"","sourcesContent":["'use strict';\r\nimport {Component, Input, OnInit} from '@angular/core';\r\n\r\nexport interface MatchPart {\r\n  isMatch: boolean;\r\n  text: string;\r\n}\r\n\r\n\r\nexport class CompleterListItemComponent implements OnInit {\r\n   public text: string;\r\n   public searchStr: string;\r\n   public matchClass: string;\r\n   public type: string;\r\n\r\n  public parts: MatchPart[] = [];\r\n  public ngOnInit() {\r\n    if (!this.searchStr) {\r\n      this.parts.push({ isMatch: false, text: this.text });\r\n      return;\r\n    }\r\n    const matchStr = this.text.toLowerCase();\r\n    let matchPos = matchStr.indexOf(this.searchStr.toLowerCase());\r\n    let startIndex = 0;\r\n    while (matchPos >= 0) {\r\n      const matchText = this.text.slice(matchPos, matchPos + this.searchStr.length);\r\n      if (matchPos === 0) {\r\n        this.parts.push({ isMatch: true, text: matchText });\r\n        startIndex += this.searchStr.length;\r\n      } else if (matchPos > 0) {\r\n        const matchPart = this.text.slice(startIndex, matchPos);\r\n        this.parts.push({ isMatch: false, text: matchPart });\r\n        this.parts.push({ isMatch: true, text: matchText });\r\n        startIndex += this.searchStr.length + matchPart.length;\r\n      }\r\n      matchPos = matchStr.indexOf(this.searchStr.toLowerCase(), startIndex);\r\n    }\r\n    if (startIndex < this.text.length) {\r\n       this.parts.push({ isMatch: false, text: this.text.slice(startIndex, this.text.length) });\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'mdb-completer-list-item',\r\n  templateUrl: 'completer-list-item.component.html'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'text': [{ type: Input },],\n'searchStr': [{ type: Input },],\n'matchClass': [{ type: Input },],\n'type': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}