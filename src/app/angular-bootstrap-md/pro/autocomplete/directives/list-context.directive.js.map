{"version":3,"sources":["../../../../../src/app/typescripts/pro/autocomplete/directives/list-context.directive.ts"],"names":[],"mappings":"AAAA,OAAO,2BAAA,CAA4B;AACnC,OAAO,EAAE,iBAAA,EAAmB,SAAA,EAAW,IAAA,EAAM,KAAA,EAAe,WAAA,EAAa,gBAAA,EAAiB,MAAO,eAAA,CAAgB;AACjH,OAAO,EAAE,UAAA,EAAW,MAAO,iBAAA,CAAkB;AAI7C,OAAO,EAAE,qBAAA,EAAqC,MAAO,uBAAA,CAAwB;AAG7E,OAAO,EAAE,iBAAA,EAAmB,KAAA,EAAO,aAAA,EAAe,KAAA,EAAM,MAAO,YAAA,CAAa;AAG5E;IACE,wBACS,OAAwB,EACxB,SAAkB,EAClB,iBAA0B,EAC1B,MAAe;QAHf,YAAO,GAAP,OAAO,CAAiB;QACxB,cAAS,GAAT,SAAS,CAAS;QAClB,sBAAiB,GAAjB,iBAAiB,CAAS;QAC1B,WAAM,GAAN,MAAM,CAAS;IACpB,CAAC;IACP,qBAAC;AAAD,CAPA,AAOC,IAAA;;AAGD;IAeE,0BACW,SAAgC,EACjC,WAAwC,EACxC,aAA+B,EAC/B,EAAqB;QAHpB,cAAS,GAAT,SAAS,CAAuB;QACjC,gBAAW,GAAX,WAAW,CAA6B;QACxC,kBAAa,GAAb,aAAa,CAAkB;QAC/B,OAAE,GAAF,EAAE,CAAmB;QAlBvB,2BAAsB,GAAG,iBAAiB,CAAC;QAC3C,iBAAY,GAAG,KAAK,CAAC;QACrB,qBAAgB,GAAG,KAAK,CAAC;QACzB,yBAAoB,GAAG,KAAK,CAAC;QAI7B,SAAI,GAAW,IAAI,CAAC;QAEpB,gBAAW,GAAiB,IAAI,CAAC;QACjC,eAAU,GAAiB,IAAI,CAAC;QAChC,QAAG,GAAG,IAAI,cAAc,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAClD,kBAAa,GAAQ,IAAI,CAAC;IAMC,CAAC;IAE7B,mCAAQ,GAAf;QACE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CACnC,IAAI,CAAC,WAAW,EAChB,IAAI,cAAc,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAC5C,CAAC;IACJ,CAAC;IAGD,sBAAW,yCAAW;aAAtB,UAAuB,UAAyB;YAAhD,iBAwBC;YAvBC,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,YAAY;qBACd,KAAK,CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAArB,CAAqB,CAAC;qBACnC,SAAS,CAAC,UAAA,OAAO;oBAChB,KAAI,CAAC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC;oBAClC,KAAI,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;oBAC3B,KAAI,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;oBAC3B,EAAE,CAAC,CAAC,KAAI,CAAC,gBAAgB,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAI,CAAC,IAAI,CAAC;wBACxF,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,iBAAiB,EAAE,KAAK,KAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;wBAEzE,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;oBACxC,CAAC;oBACD,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC;wBACvB,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,aAAa,CAAC;wBACvC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAC5B,CAAC;oBACD,EAAE,CAAC,CAAC,KAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;wBAC9B,KAAI,CAAC,SAAS,CAAC,kBAAkB,GAAG,KAAI,CAAC,iBAAiB,EAAE,CAAC;oBAC/D,CAAC;oBACD,KAAI,CAAC,eAAe,EAAE,CAAC;gBACzB,CAAC,CAAC,CAAC;YACP,CAAC;QACH,CAAC;;;OAAA;IAGD,sBAAW,0CAAY;aAAvB,UAAwB,KAAU;YAAlC,iBAWC;YAVC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,KAAK,UAAU,CAAC,CAAC,CAAC;gBAC/E,UAAU,CAAC;oBACT,IAAM,WAAW,GAAG,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;oBAC3D,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;wBAChB,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;oBAChD,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC7B,CAAC;QACH,CAAC;;;OAAA;IAEM,iCAAM,GAAb,UAAc,IAAY;QAA1B,iBAqBC;QApBC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,sBAAsB,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;YACrF,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;gBAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC1B,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC;gBACtB,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAClC,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;YAChC,CAAC;YACD,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC;gBAC/D,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;YACrE,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC;IACH,CAAC;IAEM,gCAAK,GAAZ;QAAA,iBAOC;QANC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;QACjC,CAAC;QACD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC;YAC1D,KAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,+BAAI,GAAX;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAClB,CAAC;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAEM,iCAAM,GAAb,UAAc,IAAa;QACzB,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC;IACzB,CAAC;IAEO,iCAAM,GAAd;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;YAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC;IAEO,8CAAmB,GAA3B,UAA4B,IAAY;QAEtC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;YAC3B,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAEO,sCAAW,GAAnB,UAAoB,KAAU;QAC5B,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,IAAI,MAAM,GAAG,cAAc,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO;gBACtC,KAAK,CAAC,MAAM,GAAM,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,UAAY,GAAG,cAAc,CAAC;QAC5E,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YAC7B,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACxB,CAAC;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAEO,0CAAe,GAAvB;QAEE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CACnC,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,GAAG,CACT,CAAC;QACJ,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;IACzB,CAAC;IAEO,4CAAiB,GAAzB;QAAA,iBAiBC;QAhBC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAGD,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,KAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAA1D,CAA0D,CAAC,CAAC;QAE/G,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;YAClB,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,KAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,EAAlE,CAAkE,CAAC,CAAC;QACrH,CAAC;QAED,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;YAClB,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,EAAhE,CAAgE,CAAC,CAAC;QACnH,CAAC;QAED,MAAM,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,GAAG,SAAS,CAAC;IAC1C,CAAC;IAsBH,uBAAC;AAAD,CA1MA,AA0MC;;AApBM,2BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,WAAW;aACtB,EAAG,EAAE;CACL,CAAC;AAEK,+BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,qBAAqB,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAG,EAAC;IAC7D,EAAC,IAAI,EAAE,WAAW,GAAG;IACrB,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,EAL6F,CAK7F,CAAC;AACK,+BAAc,GAA2C;IAChE,wBAAwB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5C,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAClC,kBAAkB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACtC,sBAAsB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1C,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,SAAS,EAAG,EAAE,EAAE;IACtD,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,qBAAqB,EAAG,EAAE,EAAE;CAClE,CAAC","file":"list-context.directive.js","sourceRoot":"","sourcesContent":["import 'rxjs/add/observable/timer';\r\nimport { ChangeDetectorRef, Directive, Host, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n\r\nimport { MdbCompleterDirective, CompleterList } from './completer.directive';\r\nimport { CompleterData } from '../services/completer-data.service';\r\nimport { CompleterItem } from '../components/completer-item.component';\r\nimport { MIN_SEARCH_LENGTH, PAUSE, CLEAR_TIMEOUT, isNil } from '../globals';\r\n\r\n\r\nexport class CtrListContext {\r\n  constructor(\r\n    public results: CompleterItem[],\r\n    public searching: boolean,\r\n    public searchInitialized: boolean,\r\n    public isOpen: boolean\r\n  ) { }\r\n}\r\n\r\n\r\nexport class MdbListDirective implements OnInit, CompleterList {\r\n   public mdbListMinSearchLength = MIN_SEARCH_LENGTH;\r\n   public mdbListPause = PAUSE;\r\n   public mdbListAutoMatch = false;\r\n   public mdbListAutoHighlight = false;\r\n\r\n  private _dataService: CompleterData;\r\n  // private results: CompleterItem[] = [];\r\n  private term: string = null;\r\n  // private searching = false;\r\n  private searchTimer: Subscription = null;\r\n  private clearTimer: Subscription = null;\r\n  private ctx = new CtrListContext([], false, false, false);\r\n  private _initialValue: any = null;\r\n\r\n  constructor(\r\n     private completer: MdbCompleterDirective,\r\n    private templateRef: TemplateRef<CtrListContext>,\r\n    private viewContainer: ViewContainerRef,\r\n    private cd: ChangeDetectorRef) { }\r\n\r\n  public ngOnInit() {\r\n    this.completer.registerList(this);\r\n    this.viewContainer.createEmbeddedView(\r\n      this.templateRef,\r\n      new CtrListContext([], false, false, false)\r\n    );\r\n  }\r\n\r\n  \r\n  public set dataService(newService: CompleterData) {\r\n    this._dataService = newService;\r\n    if (this._dataService) {\r\n      this._dataService\r\n        .catch(err => this.handleError(err))\r\n        .subscribe(results => {\r\n          this.ctx.searchInitialized = true;\r\n          this.ctx.searching = false;\r\n          this.ctx.results = results;\r\n          if (this.mdbListAutoMatch && results.length === 1 && results[0].title && !isNil(this.term) &&\r\n            results[0].title.toLocaleLowerCase() === this.term.toLocaleLowerCase()) {\r\n            // Do automatch\r\n            this.completer.onSelected(results[0]);\r\n          }\r\n          if (this._initialValue) {\r\n            this.initialValue = this._initialValue;\r\n            this._initialValue = null;\r\n          }\r\n          if (this.mdbListAutoHighlight) {\r\n            this.completer.autoHighlightIndex = this.getBestMatchIndex();\r\n          }\r\n          this.refreshTemplate();\r\n        });\r\n    }\r\n  }\r\n\r\n  \r\n  public set initialValue(value: any) {\r\n    if (this._dataService && typeof this._dataService.convertToItem === 'function') {\r\n      setTimeout(() => {\r\n        const initialItem = this._dataService.convertToItem(value);\r\n        if (initialItem) {\r\n          this.completer.onSelected(initialItem, false);\r\n        }\r\n      });\r\n    } else if (!this._dataService) {\r\n      this._initialValue = value;\r\n    }\r\n  }\r\n\r\n  public search(term: string) {\r\n    if (!isNil(term) && term.length >= this.mdbListMinSearchLength && this.term !== term) {\r\n      if (this.searchTimer) {\r\n        this.searchTimer.unsubscribe();\r\n        this.searchTimer = null;\r\n      }\r\n      if (!this.ctx.searching) {\r\n        this.ctx.results = [];\r\n        this.ctx.searching = true;\r\n        this.ctx.searchInitialized = true;\r\n        this.refreshTemplate();\r\n      }\r\n      if (this.clearTimer) {\r\n        this.clearTimer.unsubscribe();\r\n      }\r\n      this.searchTimer = Observable.timer(this.mdbListPause).subscribe(() => {\r\n        this.searchTimerComplete(term);\r\n      });\r\n    } else if (!isNil(term) && term.length < this.mdbListMinSearchLength) {\r\n      this.clear();\r\n    }\r\n  }\r\n\r\n  public clear() {\r\n    if (this.searchTimer) {\r\n      this.searchTimer.unsubscribe();\r\n    }\r\n    this.clearTimer = Observable.timer(CLEAR_TIMEOUT).subscribe(() => {\r\n      this._clear();\r\n    });\r\n  }\r\n\r\n  public open() {\r\n    if (!this.ctx.searchInitialized) {\r\n      this.search('');\r\n    }\r\n    this.refreshTemplate();\r\n  }\r\n\r\n  public isOpen(open: boolean) {\r\n    this.ctx.isOpen = open;\r\n  }\r\n\r\n  private _clear() {\r\n    if (this.searchTimer) {\r\n      this.searchTimer.unsubscribe();\r\n      this.searchTimer = null;\r\n    }\r\n    if (this.dataService) {\r\n      this.dataService.cancel();\r\n    }\r\n\r\n    this.viewContainer.clear();\r\n  }\r\n\r\n  private searchTimerComplete(term: string) {\r\n    // Begin the search\r\n    if (isNil(term) || term.length < this.mdbListMinSearchLength) {\r\n      this.ctx.searching = false;\r\n      return;\r\n    }\r\n    this.term = term;\r\n    this._dataService.search(term);\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    this.ctx.searching = false;\r\n    let errMsg = 'search error';\r\n    if (error) {\r\n      errMsg = (error.message) ? error.message :\r\n        error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n    }\r\n\r\n    if (console && console.error) {\r\n      console.error(errMsg); // log to console\r\n    }\r\n    this.refreshTemplate();\r\n\r\n    return Observable.throw(errMsg);\r\n  }\r\n\r\n  private refreshTemplate() {\r\n    // Recreate the template\r\n    this.viewContainer.clear();\r\n    if (this.ctx.results && this.ctx.isOpen) {\r\n      this.viewContainer.createEmbeddedView(\r\n        this.templateRef,\r\n        this.ctx\r\n      );\r\n    }\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  private getBestMatchIndex() {\r\n    if (!this.ctx.results) {\r\n      return null;\r\n    }\r\n\r\n    // First try to find the exact term\r\n    let bestMatch = this.ctx.results.findIndex(item => item.title.toLowerCase() === this.term.toLocaleLowerCase());\r\n    // If not try to find the first item that starts with the term\r\n    if (bestMatch < 0) {\r\n      bestMatch = this.ctx.results.findIndex(item => item.title.toLowerCase().startsWith(this.term.toLocaleLowerCase()));\r\n    }\r\n    // If not try to find the first item that includes the term\r\n    if (bestMatch < 0) {\r\n      bestMatch = this.ctx.results.findIndex(item => item.title.toLowerCase().includes(this.term.toLocaleLowerCase()));\r\n    }\r\n\r\n    return bestMatch < 0 ? null : bestMatch;\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[mdbList]',\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdbCompleterDirective, decorators: [{ type: Host }, ]},\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'mdbListMinSearchLength': [{ type: Input },],\n'mdbListPause': [{ type: Input },],\n'mdbListAutoMatch': [{ type: Input },],\n'mdbListAutoHighlight': [{ type: Input },],\n'dataService': [{ type: Input, args: ['mdbList', ] },],\n'initialValue': [{ type: Input, args: ['mdbListInitialValue', ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}