{"version":3,"sources":["../../../../../src/app/typescripts/pro/autocomplete/directives/completer.directive.ts"],"names":[],"mappings":"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","file":"completer.directive.js","sourceRoot":"","sourcesContent":["import { Directive, EventEmitter, Output } from '@angular/core';\r\n\r\nimport { CompleterItem } from '../components/completer-item.component';\r\n\r\nexport interface CompleterList {\r\n  search(term: string): void;\r\n  open(): void;\r\n  isOpen(open: boolean): void;\r\n  clear(): void;\r\n}\r\n\r\nexport interface CompleterDropdown {\r\n  clear(): void;\r\n  selectCurrent(): void;\r\n  nextRow(): void;\r\n  prevRow(): void;\r\n}\r\n\r\n\r\nexport class MdbCompleterDirective {\r\n   public selected = new EventEmitter<CompleterItem>();\r\n   public highlighted = new EventEmitter<CompleterItem>();\r\n   public opened = new EventEmitter<boolean>();\r\n\r\n  private list: CompleterList;\r\n  private dropdown: CompleterDropdown;\r\n  private _hasHighlighted = false;\r\n  private _hasSelected = false;\r\n  private _cancelBlur = false;\r\n  private _isOpen = false;\r\n  private _autoHighlightIndex: number;\r\n\r\n  public registerList(list: CompleterList) {\r\n    this.list = list;\r\n  }\r\n\r\n  public registerDropdown(dropdown: CompleterDropdown) {\r\n    this.dropdown = dropdown;\r\n  }\r\n\r\n  public onHighlighted(item: CompleterItem) {\r\n    this.highlighted.emit(item);\r\n    this._hasHighlighted = !!item;\r\n  }\r\n\r\n  public onSelected(item: CompleterItem, clearList = true) {\r\n    this.selected.emit(item);\r\n    if (item) {\r\n      this._hasSelected = true;\r\n    }\r\n    if (clearList) {\r\n      this.clear();\r\n    }\r\n  }\r\n\r\n  public search(term: string) {\r\n    if (this._hasSelected) {\r\n      this.selected.emit(null);\r\n      this._hasSelected = false;\r\n    }\r\n    if (this.list) {\r\n      this.list.search(term);\r\n    }\r\n  }\r\n\r\n  public clear() {\r\n    if (this.dropdown) {\r\n      this.dropdown.clear();\r\n    }\r\n    if (this.list) {\r\n      this.list.clear();\r\n    }\r\n    this._hasHighlighted = false;\r\n    this.isOpen = false;\r\n  }\r\n\r\n  public selectCurrent() {\r\n    if (this.dropdown) {\r\n      this.dropdown.selectCurrent();\r\n    }\r\n  }\r\n\r\n  public nextRow() {\r\n    if (this.dropdown) {\r\n      this.dropdown.nextRow();\r\n    }\r\n  }\r\n\r\n  public prevRow() {\r\n    if (this.dropdown) {\r\n      this.dropdown.prevRow();\r\n    }\r\n  }\r\n\r\n  public hasHighlighted() {\r\n    return this._hasHighlighted;\r\n  }\r\n\r\n  public cancelBlur(cancel: boolean) {\r\n    this._cancelBlur = cancel;\r\n  }\r\n\r\n  public isCancelBlur() {\r\n    return this._cancelBlur;\r\n  }\r\n\r\n  public open() {\r\n    if (!this._isOpen) {\r\n      this.isOpen = true;\r\n      this.list.open();\r\n    }\r\n  }\r\n\r\n  public get isOpen() {\r\n    return this._isOpen;\r\n  }\r\n\r\n  public set isOpen(open: boolean) {\r\n    this._isOpen = open;\r\n    this.opened.emit(this._isOpen);\r\n    if (this.list) {\r\n      this.list.isOpen(open);\r\n    }\r\n  }\r\n\r\n  public get autoHighlightIndex() {\r\n    return this._autoHighlightIndex;\r\n  }\r\n\r\n  public set autoHighlightIndex(index: number) {\r\n    this._autoHighlightIndex = index;\r\n  }\r\n\r\n  public get hasSelected() {\r\n    return this._hasSelected;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[mdbCompleter]',\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'selected': [{ type: Output },],\n'highlighted': [{ type: Output },],\n'opened': [{ type: Output },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}