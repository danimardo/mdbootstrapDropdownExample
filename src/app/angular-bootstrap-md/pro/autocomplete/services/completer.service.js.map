{"version":3,"sources":["../../../../../src/app/typescripts/pro/autocomplete/services/completer.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,UAAE,EAAW,MAAA,EAAO,MAAM,eAAA,CAAgB;AAGjD,OAAO,EAAA,SAAE,EAAS,MAAM,sBAAA,CAAuB;AAC/C,OAAO,EAAA,UAAE,EAAU,MAAM,uBAAA,CAAwB;AAIjD;IACE,0BACW,gBAAqB,EACrB,iBAAsB;QADtB,qBAAgB,GAAhB,gBAAgB,CAAK;QACrB,sBAAiB,GAAjB,iBAAiB,CAAK;IAC7B,CAAC;IAEE,gCAAK,GAAZ,UAAa,IAA6B,EAAE,YAAiB,EAAE,UAAe;QAAlC,6BAAA,EAAA,iBAAiB;QAAE,2BAAA,EAAA,eAAe;QAE5E,IAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1C,MAAM,CAAC,SAAS;aACb,IAAI,CAAC,IAAI,CAAC;aACV,YAAY,CAAC,YAAY,CAAC;aAC1B,UAAU,CAAC,UAAU,CAAC,CAAC;IAC5B,CAAC;IAEM,iCAAM,GAAb,UAAc,GAAW,EAAE,YAAiB,EAAE,UAAe;QAAlC,6BAAA,EAAA,iBAAiB;QAAE,2BAAA,EAAA,eAAe;QAE3D,IAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC5C,MAAM,CAAC,UAAU;aACd,SAAS,CAAC,GAAG,CAAC;aACd,YAAY,CAAC,YAAY,CAAC;aAC1B,UAAU,CAAC,UAAU,CAAC,CAAC;IAC5B,CAAC;IASH,uBAAC;AAAD,CA/BA,AA+BC;;AARM,2BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AAEK,+BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,SAAS,EAAG,EAAE,EAAG,EAAC;IACxE,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,UAAU,EAAG,EAAE,EAAG,EAAC;CACxE,EAH6F,CAG7F,CAAC","file":"completer.service.js","sourceRoot":"","sourcesContent":["import {Injectable, Inject} from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport {LocalData} from './local-data.service';\r\nimport {RemoteData} from './remote-data.service';\r\n\r\n\r\n\r\nexport class CompleterService {\r\n  constructor(\r\n     private localDataFactory: any, // Using any instead of () => LocalData because on AoT errors\r\n     private remoteDataFactory: any // Using any instead of () => LocalData because on AoT errors\r\n  ) { }\r\n\r\n  public local(data: any[] | Observable<any>, searchFields = '', titleField = ''): LocalData {\r\n\r\n    const localData = this.localDataFactory();\r\n    return localData\r\n      .data(data)\r\n      .searchFields(searchFields)\r\n      .titleField(titleField);\r\n  }\r\n\r\n  public remote(url: string, searchFields = '', titleField = ''): RemoteData {\r\n\r\n    const remoteData = this.remoteDataFactory();\r\n    return remoteData\r\n      .remoteUrl(url)\r\n      .searchFields(searchFields)\r\n      .titleField(titleField);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LocalData, ] }, ]},\n{type: undefined, decorators: [{ type: Inject, args: [RemoteData, ] }, ]},\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}