{"version":3,"sources":["../../../../src/app/typescripts/pro/preloader/preloader.service.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,UAAU,EACV,MAAM,EACP,MAAM,eAAA,CAAgB;AAEvB,OAAO,EACL,QAAQ,EACT,MAAM,2BAAA,CAA4B;AAEnC,OAAO,EACL,eAAe,EACf,mBAAmB,EACnB,0CAA0C,EAC1C,oBAAoB,EACrB,MAAM,uBAAA,CAAwB;AAK/B;IAOE,8BAAoB,QAAa;QAAb,aAAQ,GAAR,QAAQ,CAAK;QAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;IAChE,CAAC;IANa,iCAAY,GAA1B;QACE,MAAM,IAAI,SAAS,CAAC,0CAA0C,CAAC,CAAC;IAClE,CAAC;IAMM,oCAAK,GAAZ;QACE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;IACvD,CAAC;IAEM,mCAAI,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IACpD,CAAC;IAED,sBAAW,2CAAS;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAqB,OAAO;YAC1B,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAEf,CAAC;YAED,IAAI,CAAC,UAAU,GAAG,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;QACjF,CAAC;;;OARA;IAiBH,2BAAC;AAAD,CAtCA,AAsCC;;AAPM,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AAEK,mCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAG,EAAE,EAAG,EAAC;CACtE,EAF6F,CAE7F,CAAC","file":"preloader.service.js","sourceRoot":"","sourcesContent":["import {\r\n  Injectable,\r\n  Inject\r\n} from '@angular/core';\r\n\r\nimport {\r\n  DOCUMENT\r\n} from '@angular/platform-browser';\r\n\r\nimport {\r\n  CONTAINER_QUERY,\r\n  COMPLETE_CLASS_NAME,\r\n  TYPE_ERROR_CONTAINER_WAS_NOT_FOUND_MESSAGE,\r\n  EMULATE_ELEMENT_NAME\r\n} from './preloader.constants';\r\n\r\nimport {MDB_SPINNING_PRELOADER_TYPE} from './preloader.types';\r\n\r\n\r\nexport class MDBSpinningPreloader {\r\n  public _container: MDB_SPINNING_PRELOADER_TYPE;\r\n\r\n  public static errorHandler() {\r\n    throw new TypeError(TYPE_ERROR_CONTAINER_WAS_NOT_FOUND_MESSAGE);\r\n  }\r\n\r\n  constructor( public document: any) {\r\n    this.container = this.document.querySelector(CONTAINER_QUERY);\r\n  }\r\n\r\n  public start() {\r\n    this.container.classList.remove(COMPLETE_CLASS_NAME);\r\n  }\r\n\r\n  public stop() {\r\n    this.container.classList.add(COMPLETE_CLASS_NAME);\r\n  }\r\n\r\n  public get container(): MDB_SPINNING_PRELOADER_TYPE {\r\n    return this._container;\r\n  }\r\n\r\n  public set container(element) {\r\n    if (!element) {\r\n      // NgSpinningPreloader.errorHandler();\r\n    }\r\n\r\n    this._container = element || this.document.createElement(EMULATE_ELEMENT_NAME);\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}