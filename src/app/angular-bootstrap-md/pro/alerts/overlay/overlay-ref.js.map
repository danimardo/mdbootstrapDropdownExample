{"version":3,"sources":["../../../../../src/app/typescripts/pro/alerts/overlay/overlay-ref.ts"],"names":[],"mappings":"AAOA;IACE,oBACY,WAA2B;QAA3B,gBAAW,GAAX,WAAW,CAAgB;IAAI,CAAC;IAE5C,2BAAM,GAAN,UAAO,MAA4B,EAAE,WAAoB;QACvD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IACtD,CAAC;IAMD,2BAAM,GAAN;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IACnC,CAAC;IACH,iBAAC;AAAD,CAfA,AAeC,IAAA","file":"overlay-ref.js","sourceRoot":"","sourcesContent":["import {ComponentRef} from '@angular/core';\r\nimport {BasePortalHost, ComponentPortal} from '../portal/portal';\r\n\r\n/**\r\n * Reference to an overlay that has been created with the Overlay service.\r\n * Used to manipulate or dispose of said overlay.\r\n */\r\nexport class OverlayRef {\r\n  constructor(\r\n      private _portalHost: BasePortalHost) { }\r\n\r\n  attach(portal: ComponentPortal<any>, newestOnTop: boolean): ComponentRef<any> {\r\n    return this._portalHost.attach(portal, newestOnTop);\r\n  }\r\n\r\n  /**\r\n   * Detaches an overlay from a portal.\r\n   * @returns Resolves when the overlay has been detached.\r\n   */\r\n  detach() {\r\n    return this._portalHost.detach();\r\n  }\r\n}\r\n"]}