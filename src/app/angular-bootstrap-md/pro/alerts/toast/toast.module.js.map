{"version":3,"sources":["../../../../../src/app/typescripts/pro/alerts/toast/toast.module.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,QAAQ,EAER,QAAQ,EACR,QAAQ,GACT,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAE,YAAA,EAAa,MAAO,iBAAA,CAAkB;AAE/C,OAAO,EAAE,cAAA,EAAe,MAAO,mBAAA,CAAoB;AACnD,OAAO,EAAE,YAAA,EAAa,MAAO,eAAA,CAAgB;AAC7C,OAAO,EAAE,YAAA,EAAa,MAAO,iBAAA,CAAkB;AAE/C,OAAO,EAAE,gBAAA,EAAiB,MAAO,8BAAA,CAA+B;AAChE,OAAO,EAAE,OAAA,EAAQ,MAAO,oBAAA,CAAqB;AAI7C;IAYE,qBAAc,YAAyB;QACrC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACjB,MAAM,IAAI,KAAK,CAAC,+FAA+F,CAAC,CAAC;QACnH,CAAC;IACH,CAAC;IAfM,mBAAO,GAAd,UAAe,MAAqB;QAClC,MAAM,CAAC;YACL,QAAQ,EAAE,WAAW;YACrB,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,EAAE;gBAC3C,gBAAgB;gBAChB,OAAO;gBACP,YAAY;aACb;SACF,CAAC;IACJ,CAAC;IAkBH,kBAAC;AAAD,CA7BA,AA6BC;;AAZM,sBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACvB,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,CAAC,cAAc,CAAC;gBACzB,YAAY,EAAE,CAAC,cAAc,CAAC;gBAC9B,eAAe,EAAE,CAAC,cAAc,CAAC;aAClC,EAAG,EAAE;CACL,CAAC;AAEK,0BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;CAC1E,EAF6F,CAE7F,CAAC","file":"toast.module.js","sourceRoot":"","sourcesContent":["import {\r\n  NgModule,\r\n  ModuleWithProviders,\r\n  SkipSelf,\r\n  Optional,\r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ToastComponent } from './toast.component';\r\nimport { TOAST_CONFIG } from './toast.token';\r\nimport { ToastService } from './toast.service';\r\nimport { GlobalConfig } from './toast.config';\r\nimport { OverlayContainer } from '../overlay/overlay-container';\r\nimport { Overlay } from '../overlay/overlay';\r\n\r\n\r\n\r\nexport class ToastModule {\r\n  static forRoot(config?: GlobalConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: ToastModule,\r\n      providers: [\r\n        { provide: TOAST_CONFIG, useValue: config },\r\n        OverlayContainer,\r\n        Overlay,\r\n        ToastService,\r\n      ]\r\n    };\r\n  }\r\n  constructor(  parentModule: ToastModule) {\r\n    if (parentModule) {\r\n      throw new Error('ToastModule is already loaded. It should only be imported in your application\\'s main module.');\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [CommonModule],\r\n  exports: [ToastComponent],\r\n  declarations: [ToastComponent],\r\n  entryComponents: [ToastComponent],\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ToastModule, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}