{"version":3,"sources":["../../../../../src/app/typescripts/pro/alerts/toast/toast.service.ts"],"names":[],"mappings":"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","file":"toast.service.js","sourceRoot":"","sourcesContent":["import { Injectable, Injector, ComponentRef, Inject, SecurityContext } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { Overlay } from '../overlay/overlay';\r\nimport { ComponentPortal } from '../portal/portal';\r\nimport { GlobalConfig, IndividualConfig, ToastPackage } from './toast.config';\r\nimport { ToastInjector, ToastRef } from './toast.injector';\r\nimport { ToastContainerDirective } from './toast.directive';\r\nimport { TOAST_CONFIG } from './toast.token';\r\nimport { ToastComponent } from './toast.component';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\nexport interface ActiveToast {\r\n  toastId?: number;\r\n  message?: string;\r\n  portal?: ComponentRef<any>;\r\n  toastRef?: ToastRef<any>;\r\n  onShown?: Observable<any>;\r\n  onHidden?: Observable<any>;\r\n  onTap?: Observable<any>;\r\n  onAction?: Observable<any>;\r\n}\r\n\r\n\r\nexport class ToastService {\r\n  private index = 0;\r\n  private previousToastMessage = '';\r\n  currentlyActive = 0;\r\n  toasts: ActiveToast[] = [];\r\n  overlayContainer: ToastContainerDirective;\r\n\r\n  constructor(\r\n     public toastConfig: GlobalConfig,\r\n    private overlay: Overlay,\r\n    private _injector: Injector,\r\n    private sanitizer: DomSanitizer,\r\n  ) {\r\n    function use<T>(source: T, defaultValue: T): T {\r\n      return toastConfig && source !== undefined ? source : defaultValue;\r\n    }\r\n    this.toastConfig = this.applyConfig(toastConfig);\r\n    // Global\r\n    this.toastConfig.maxOpened = use(this.toastConfig.maxOpened, 0);\r\n    this.toastConfig.autoDismiss = use(this.toastConfig.autoDismiss, false);\r\n    this.toastConfig.newestOnTop = use(this.toastConfig.newestOnTop, true);\r\n    this.toastConfig.preventDuplicates = use(this.toastConfig.preventDuplicates, false);\r\n    if (!this.toastConfig.iconClasses) {\r\n      this.toastConfig.iconClasses = {};\r\n    }\r\n    this.toastConfig.iconClasses.error = this.toastConfig.iconClasses.error || 'toast-error';\r\n    this.toastConfig.iconClasses.info = this.toastConfig.iconClasses.info || 'toast-info';\r\n    this.toastConfig.iconClasses.success = this.toastConfig.iconClasses.success || 'toast-success';\r\n    this.toastConfig.iconClasses.warning = this.toastConfig.iconClasses.warning || 'toast-warning';\r\n\r\n    // Individual\r\n    this.toastConfig.timeOut = use(this.toastConfig.timeOut, 5000);\r\n    this.toastConfig.closeButton = use(this.toastConfig.closeButton, false);\r\n    this.toastConfig.extendedTimeOut = use(this.toastConfig.extendedTimeOut, 1000);\r\n    this.toastConfig.progressBar = use(this.toastConfig.progressBar, false);\r\n    this.toastConfig.enableHtml = use(this.toastConfig.enableHtml, false);\r\n    this.toastConfig.toastClass = use(this.toastConfig.toastClass, 'toast');\r\n    this.toastConfig.positionClass = use(this.toastConfig.positionClass, 'toast-top-right');\r\n    this.toastConfig.titleClass = use(this.toastConfig.titleClass, 'toast-title');\r\n    this.toastConfig.messageClass = use(this.toastConfig.messageClass, 'toast-message');\r\n    this.toastConfig.tapToDismiss = use(this.toastConfig.tapToDismiss, true);\r\n    this.toastConfig.toastComponent = use(this.toastConfig.toastComponent, ToastComponent);\r\n    this.toastConfig.onActivateTick = use(this.toastConfig.onActivateTick, false);\r\n  }\r\n  /** show successful toast */\r\n  show(message: string, title?: string, override?: IndividualConfig, type = '') {\r\n    return this._buildNotification(type, message, title, this.applyConfig(override));\r\n  }\r\n  /** show successful toast */\r\n  success(message: string, title?: string, override?: IndividualConfig) {\r\n    const type = this.toastConfig.iconClasses.success;\r\n    return this._buildNotification(type, message, title, this.applyConfig(override));\r\n  }\r\n  /** show error toast */\r\n  error(message: string, title?: string, override?: IndividualConfig) {\r\n    const type = this.toastConfig.iconClasses.error;\r\n    return this._buildNotification(type, message, title, this.applyConfig(override));\r\n  }\r\n  /** show info toast */\r\n  info(message: string, title?: string, override?: IndividualConfig) {\r\n    const type = this.toastConfig.iconClasses.info;\r\n    return this._buildNotification(type, message, title, this.applyConfig(override));\r\n  }\r\n  /** show warning toast */\r\n  warning(message: string, title?: string, override?: IndividualConfig) {\r\n    const type = this.toastConfig.iconClasses.warning;\r\n    return this._buildNotification(type, message, title, this.applyConfig(override));\r\n  }\r\n  /**\r\n   * Remove all or a single toast by id\r\n   */\r\n  clear(toastId?: number) {\r\n    // Call every toastRef manualClose function\r\n    for (const toast of this.toasts) {\r\n      if (toastId !== undefined) {\r\n        if (toast.toastId === toastId) {\r\n          toast.toastRef.manualClose();\r\n          return;\r\n        }\r\n      } else {\r\n        toast.toastRef.manualClose();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Remove and destroy a single toast by id\r\n   */\r\n  remove(toastId: number) {\r\n    const found = this._findToast(toastId);\r\n    if (!found) {\r\n      return false;\r\n    }\r\n    found.activeToast.toastRef.close();\r\n    this.toasts.splice(found.index, 1);\r\n    this.currentlyActive = this.currentlyActive - 1;\r\n    if (!this.toastConfig.maxOpened || !this.toasts.length) {\r\n      return false;\r\n    }\r\n    if (this.currentlyActive <= +this.toastConfig.maxOpened && this.toasts[this.currentlyActive]) {\r\n      const p = this.toasts[this.currentlyActive].toastRef;\r\n      if (!p.isInactive()) {\r\n        this.currentlyActive = this.currentlyActive + 1;\r\n        p.activate();\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Determines if toast message is already shown\r\n   */\r\n  isDuplicate(message: string) {\r\n    for (let i = 0; i < this.toasts.length; i++) {\r\n      if (this.toasts[i].message === message) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** create a clone of global config and apply individual settings */\r\n  private applyConfig(override: IndividualConfig = {}): GlobalConfig {\r\n    function use<T>(source: T, defaultValue: T): T {\r\n      return override && source !== undefined ? source : defaultValue;\r\n    }\r\n    const current: GlobalConfig = { ...this.toastConfig };\r\n    current.closeButton = use(override.closeButton, current.closeButton);\r\n    current.extendedTimeOut = use(override.extendedTimeOut, current.extendedTimeOut);\r\n    current.progressBar = use(override.progressBar, current.progressBar);\r\n    current.timeOut = use(override.timeOut, current.timeOut);\r\n    current.enableHtml = use(override.enableHtml, current.enableHtml);\r\n    current.toastClass = use(override.toastClass, current.toastClass);\r\n    current.positionClass = use(override.positionClass, current.positionClass);\r\n    current.titleClass = use(override.titleClass, current.titleClass);\r\n    current.messageClass = use(override.messageClass, current.messageClass);\r\n    current.tapToDismiss = use(override.tapToDismiss, current.tapToDismiss);\r\n    current.toastComponent = use(override.toastComponent, current.toastComponent);\r\n    current.onActivateTick = use(override.onActivateTick, current.onActivateTick);\r\n    return current;\r\n  }\r\n\r\n  /**\r\n   * Find toast object by id\r\n   */\r\n  private _findToast(toastId: number): { index: number, activeToast: ActiveToast } | null {\r\n    for (let i = 0; i < this.toasts.length; i++) {\r\n      if (this.toasts[i].toastId === toastId) {\r\n        return { index: i, activeToast: this.toasts[i] };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Creates and attaches toast data to component\r\n   * returns null if toast is duplicate and preventDuplicates == True\r\n   */\r\n  private _buildNotification(\r\n    toastType: string,\r\n    message: string,\r\n    title: string,\r\n    config: GlobalConfig,\r\n  ): ActiveToast | null {\r\n    // max opened and auto dismiss = true\r\n    if (this.toastConfig.preventDuplicates && this.isDuplicate(message)) {\r\n      return null;\r\n    }\r\n    this.previousToastMessage = message;\r\n    let keepInactive = false;\r\n    if (this.toastConfig.maxOpened && this.currentlyActive >= this.toastConfig.maxOpened) {\r\n      keepInactive = true;\r\n      if (this.toastConfig.autoDismiss) {\r\n        this.clear(this.toasts[this.toasts.length - 1].toastId);\r\n      }\r\n    }\r\n    const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\r\n    this.index = this.index + 1;\r\n    let sanitizedMessage = message;\r\n    if (message && config.enableHtml) {\r\n      sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\r\n    }\r\n    const toastRef = new ToastRef(overlayRef);\r\n    const toastPackage = new ToastPackage(\r\n      this.index,\r\n      config,\r\n      sanitizedMessage,\r\n      title,\r\n      toastType,\r\n      toastRef,\r\n    );\r\n    const ins: ActiveToast = {\r\n      toastId: this.index,\r\n      message,\r\n      toastRef,\r\n      onShown: toastRef.afterActivate(),\r\n      onHidden: toastRef.afterActivate(),\r\n      onTap: toastPackage.onTap(),\r\n      onAction: toastPackage.onAction(),\r\n    };\r\n    const toastInjector = new ToastInjector(toastPackage, this._injector);\r\n    const component = new ComponentPortal(config.toastComponent, toastInjector);\r\n    ins.portal = overlayRef.attach(component, this.toastConfig.newestOnTop);\r\n    if (!keepInactive) {\r\n      setTimeout(() => {\r\n        ins.toastRef.activate();\r\n        this.currentlyActive = this.currentlyActive + 1;\r\n      });\r\n    }\r\n    this.toasts.push(ins);\r\n    return ins;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: GlobalConfig, decorators: [{ type: Inject, args: [TOAST_CONFIG, ] }, ]},\n{type: Overlay, },\n{type: Injector, },\n{type: DomSanitizer, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}