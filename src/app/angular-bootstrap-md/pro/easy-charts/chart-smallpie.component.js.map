{"version":3,"sources":["../../../../src/app/typescripts/pro/easy-charts/chart-smallpie.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,UAAA,EAA8C,KAAA,EAAM,MAAO,eAAA,CAAgB;AAK/F;IAME,+BAAY,EAAc;QACxB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAM,OAAO,GAAG;YACd,QAAQ,EAAE,SAAS;YACnB,UAAU,EAAE,SAAS;YACrB,UAAU,EAAE,SAAS;YACrB,WAAW,EAAE,CAAC;YACd,OAAO,EAAE,OAAO;YAChB,SAAS,EAAE,CAAC;YACZ,IAAI,EAAE,GAAG;YACT,MAAM,EAAE,CAAC;YACT,OAAO,EAAE;gBACP,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,IAAI;aACd;SACF,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACtD,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3E,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,2CAAW,GAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC;IACH,CAAC;IAeH,4BAAC;AAAD,CAlDA,AAkDC;;AAdM,gCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,oBAAoB;gBAC9B,QAAQ,EAAE,oBAAoB;aAC/B,EAAG,EAAE;CACL,CAAC;AAEK,oCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,EAF6F,CAE7F,CAAC;AACK,oCAAc,GAA2C;IAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,SAAS,EAAG,EAAE,EAAE;IAClD,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,SAAS,EAAG,EAAE,EAAE;CACjD,CAAC","file":"chart-smallpie.component.js","sourceRoot":"","sourcesContent":["import { Component, ElementRef, OnInit, OnChanges, SimpleChanges, Input } from '@angular/core';\r\n\r\ndeclare var EasyPieChart: any;\r\n\r\n\r\nexport class EasyPieChartComponent implements OnInit, OnChanges {\r\n   percent: any;\r\n   options: any;\r\n  element: any;\r\n  pieChart: any;\r\n\r\n  constructor(el: ElementRef) {\r\n    this.element = el;\r\n    const options = {\r\n      barColor: '#ef1e25',\r\n      trackColor: '#f9f9f9',\r\n      scaleColor: '#dfe0e0',\r\n      scaleLength: 5,\r\n      lineCap: 'round',\r\n      lineWidth: 3,\r\n      size: 110,\r\n      rotate: 0,\r\n      animate: {\r\n        duration: 1000,\r\n        enabled: true\r\n      }\r\n    };\r\n    this.options = Object.assign(options, this.options);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.element.nativeElement.innerHTML = '';\r\n    this.pieChart = new EasyPieChart(this.element.nativeElement, this.options);\r\n    this.pieChart.update(this.percent);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!changes['percent'].isFirstChange()) {\r\n      this.pieChart.update(this.percent);\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'mdb-easy-pie-chart',\r\n  template: '<div>Loading</div>'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'percent': [{ type: Input, args: ['percent', ] },],\n'options': [{ type: Input, args: ['options', ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}