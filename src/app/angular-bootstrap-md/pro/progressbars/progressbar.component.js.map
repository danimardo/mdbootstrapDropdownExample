{"version":3,"sources":["../../../../src/app/typescripts/pro/progressbars/progressbar.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAM,MAAO,eAAA,CAAgB;AACjD,OAAO,EAAE,0BAAA,EAA2B,MAAO,gCAAA,CAAiC;AAG5E;IAUE,8BAAmB,MAAkC;QACnD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;IAiBH,2BAAC;AAAD,CA7BA,AA6BC;;AAhBM,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;aAC5C,EAAG,EAAE;CACL,CAAC;AAEK,mCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,0BAA0B,GAAG;CACnC,EAF6F,CAE7F,CAAC;AACK,mCAAc,GAA2C;IAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7B,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACzB,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC1B,CAAC","file":"progressbar.component.js","sourceRoot":"","sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { ProgressbarConfigComponent } from './progressbar.config.component';\r\n\r\n\r\nexport class ProgressbarComponent {\r\n    /** if `true` changing value of progress bar will be animated (note: not supported by Bootstrap 4) */\r\n   public animate: boolean;\r\n  /** maximum total value of progress element */\r\n   public max: number;\r\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\r\n   public type: string;\r\n  /** current value of progress bar */\r\n   public value: number;\r\n\r\n  public constructor(config: ProgressbarConfigComponent) {\r\n    Object.assign(this, config);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'mdb-progressbar',\r\n  templateUrl: './progressbar.component.html'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ProgressbarConfigComponent, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'animate': [{ type: Input },],\n'max': [{ type: Input },],\n'type': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}