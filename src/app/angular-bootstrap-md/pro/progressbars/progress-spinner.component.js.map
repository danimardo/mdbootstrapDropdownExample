{"version":3,"sources":["../../../../src/app/typescripts/pro/progressbars/progress-spinner.component.ts"],"names":[],"mappings":"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","file":"progress-spinner.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, ElementRef, OnInit, AfterViewInit } from '@angular/core';\r\n\r\n\r\nexport class ProgressSpinnerComponent implements AfterViewInit {\r\n    el: ElementRef;\r\n    addClass: String = 'spinner-blue-only';\r\n     spinnerType = '';\r\n     spinnerColor = 'rainbow';\r\n\r\n     constructor(el: ElementRef) {\r\n        this.el = el;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        const hostElem = this.el.nativeElement;\r\n        const colorClass = this.spinnerColor;\r\n        this.addClass = 'spinner-rainbow';\r\n\r\n        switch (colorClass) {\r\n            case 'green':\r\n                this.addClass = 'spinner-green-only';\r\n                break;\r\n            case 'blue':\r\n                this.addClass = 'spinner-blue-only';\r\n                break;\r\n            case 'yellow':\r\n                this.addClass = 'spinner-yellow-only';\r\n                break;\r\n            case 'red':\r\n                this.addClass = 'spinner-red-only';\r\n                break;\r\n            case 'rainbow':\r\n                this.addClass = 'spinner-rainbow spinner-blue-only mat-progress-spinner';\r\n                this.spinerRun();\r\n                break;\r\n        }\r\n        hostElem.children[0].children[0].className += ' ' + this.addClass;\r\n    }\r\n\r\n    spinerRun() {\r\n        let counter = 0;\r\n        const hostElem = this.el.nativeElement;\r\n        setInterval(() => {\r\n            switch (counter) {\r\n                case 0:\r\n                    this.addClass = 'spinner-red-only mat-progress-spinner ';\r\n                    break;\r\n                case 1:\r\n                    this.addClass = 'spinner-yellow-only mat-progress-spinner';\r\n                    break;\r\n                case 2:\r\n                    this.addClass = 'spinner-blue-only mat-progress-spinner';\r\n                    break;\r\n                case 3:\r\n                    this.addClass = 'spinner-green-only mat-progress-spinner';\r\n                    break;\r\n            }\r\n\r\n            hostElem.children[0].children[0].className = ' ' + this.addClass;\r\n            if (counter < 3) {\r\n                counter++;\r\n            } else {\r\n                counter = 0;\r\n            }\r\n        }, 1333);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'mdb-spinner',\r\n    templateUrl: 'progress-spinner.component.html'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'spinnerType': [{ type: Input },],\n'spinnerColor': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}